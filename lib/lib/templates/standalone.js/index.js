export default (data) => `// Fastify plugin autogenerated by fastify-openapi-glue

import fastifyPlugin from "fastify-plugin";
import { Service } from "./${data.serviceFile}";
import { Security } from "./${data.securityFile}";

function notImplemented(operationId) {
	return async () => {
		throw new Error(\`Operation \${operationId} not implemented\`);
	};
}

module.exports = fastifyPlugin(
	async function (fastify, opts) {
${data.config.routes
	.map(
		(item) =>
			`		fastify.route({
			method: "${item.method}",
			url: "${item.url}",
			schema: ${optimizeSchema(item.schema)},
			config: ${item.config},
			handler: Service["${item.operationId}"].bind(Service)
		});
`,
	)
	.join("\n")}
}, { fastify: '^4.x' })
`;

function optimizeSchema(schema, indent = 3) {
	const prefix = `${"\t".repeat(indent)}`;
	const schemaKeys = ["body", "query", "querystring", "params", "reponse"];
	const newSchema = {};
	for (const key of schemaKeys) {
		if (schema[key] !== undefined) {
			newSchema[key] = schema[key];
		}
	}
	const json = JSON.stringify(newSchema, null, "\t").split(/\n/);
	return json
		.map((item, i) => stripQuotes(i > 0 ? prefix + item : item))
		.join("\n");
}

function stripQuotes(str) {
	return str.replace('"', "").replace('"', "");
}
